package client

import (
	"context"
	"github.com/coming-chat/go-sui/types"
	"os"
	"testing"

	"github.com/coming-chat/go-sui/account"
	"github.com/stretchr/testify/require"
)

const (
	// DmensDmensB64 DmensProfileB64 Compile by dmens move(git:deb1bb7ce72caba97ef6a8acfbb7e02c43644b83)
	DmensDmensB64   = "oRzrCwYAAAAMAQAQAhAuAz7lAQSjAiwFzwKsAgf7BJIFCI0KPAbJCocBCtALQgySDPwMDY4ZFA+iGQIAAQECAQMCBAIFAgYCBwIIAAkMAAAKCAAACwgAAAwIAAYUAgABFwcBAAACHgcAAyoEAAcwBwAEMwwCBwEEAQANAAEAAA4CAQAADwMBAAAQBAEAABEFAQAAEgYBAAATBwEAABUIAQAAFgkBAAAYCgEAABkLDAAAGg0OAAAbCwwAABwPDgAAHQsMAAAfEBEAACASEwAAIRQTAAAiFQEAACMWAQAAJBcBAAAlGAEAACYYAQAAJwoBAAAoCQEABDUbDgIHBAQ2HB0CBwQENyABAgcEBQYhAQEIAzgiAQAEOSQBAgcEBDokAQIHBgM7CCIABDsIJAIHBAc8JicABj0oEwABPioOAQABPwEsAQABQC0uAQAEQTAMAgcEAkImKwABQy4sAQAZGhoaGxocBh4aHyUhJSEaHAcbJSQTJSsmExwvJxonJRklKSslEykTHDMaJQIHCAEKAwABCggAAwcIAQMDAgcIAQoIAAMHCAEKAwUBCAABCAEBBwgEAgcIAQoFBAcIAQILBQEFBwgEAQYIAQEDAgYIAQMBAQIGCAEFAQYIAAUCBQsFAQgGCwUBBQIBBggCAQUBBggDBQcIAQICCgIHCAQEBwgBAgoCBwgEBgcIAQICCgIFBwgEBQcIAQIKAgsFAQUHCAQDAwMDAgMIAAIGCwkCCQAJAQkAAgcLCQIJAAkBCQABCQECAwMDCAADAwMHCwkCCQAJAQkACQECCQAFAQgHBAsJAgMIAAsJAgUFCAcDAQsJAgkACQECBQUBCgIBCAgBBggEAwUDAwEGCwUBCQABCAYBCwUBCQABBwsFAQkAAQkAAQgCAQYLCQIJAAkBAQIEAQEBAQEIAwdwcm9maWxlBWRtZW5zBm9wdGlvbgZzdHJpbmcGb2JqZWN0BXRhYmxlCHRyYW5zZmVyCnR4X2NvbnRleHQDdXJsBURtZW5zCURtZW5zTWV0YQRMaWtlBlJlcG9zdBJiYXRjaF9idXJuX2luZGV4ZXMSYmF0Y2hfYnVybl9vYmplY3RzEGJhdGNoX2J1cm5fcmFuZ2ULYmF0Y2hfcGxhY2UKYmF0Y2hfdGFrZQ5idXJuX2J5X29iamVjdAtkZXN0b3J5X2FsbAlUeENvbnRleHQKZG1lbnNfbWV0YQZmb2xsb3cGT3B0aW9uDWxpa2VfaW50ZXJuYWwQbWV0YV9kbWVuc19jb3VudBBtZXRhX2RtZW5zX2V4aXN0DG1ldGFfZm9sbG93cxJtZXRhX2hhc19mb2xsb3dpbmcKbWV0YV9pbmRleAZTdHJpbmcLcGFyc2VfZG1lbnMKcGFyc2VfbGlrZQxwYXJzZV9yZXBvc3QEcG9zdA1wb3N0X2ludGVybmFsDXBvc3Rfd2l0aF9yZWYTcXVvdGVfcG9zdF9pbnRlcm5hbA5yZXBseV9pbnRlcm5hbA9yZXBvc3RfaW50ZXJuYWwIdW5mb2xsb3cCaWQDVUlEBmFwcF9pZAZwb3N0ZXIEdGV4dAZyZWZfaWQGYWN0aW9uA1VybApuZXh0X2luZGV4B2ZvbGxvd3MFVGFibGULZG1lbnNfdGFibGUIY29udGFpbnMGcmVtb3ZlA2FkZAZkZWxldGUNZGVzdHJveV9lbXB0eQRkcm9wA25ldxVuZXdfdW5zYWZlX2Zyb21fYnl0ZXMGc2VuZGVyB2lzX3NvbWUEbm9uZQdleHRyYWN0Bmxlbmd0aAR1dGY4BHNvbWUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAICAQQCAQACAQICAQMCAQEDCAQAAAAAAAAAAwgCAAAAAAAAAAMIAQAAAAAAAAADCAMAAAAAAAAAAwgQJwAAAAAAAAoCQ0JpcGZzOi8vYmFma3JlaWJhdDU0cnd3ZnV4bTM3N3lqNXZsaGpoeWo3Y2J6ZXgydGRoa3R4bW9tNnJkY281NHVwNWEAAgcpCAcrAiwFLQsFAQgGLgsFAQUvAggICAECBSkIBzEDMgsJAgUFNAsJAgMIAAgICAICAikIBywFAwICKQgHLAUAAQQAGR8GAAAAAAAAAAAOAUEMDAQMAgoCCgQjBBwFCg0BRQwMAwoAEAAKAzgABBcKAA8ACwM4AREFCwIGAQAAAAAAAAAWDAIFBQsAAQIBAQQAHhUGAAAAAAAAAAAOAEEGDAIMAQoBCgIjBBIFCg0ARQYRBQsBBgEAAAAAAAAAFgwBBQULAEYGAAAAAAAAAAACAgEEAB4mCgAQARQKAiMECwoAEAEUDAMFDQsCDAMLAwwECgEKBCMEIwUUCgAQAAoBOAAEHgoADwAKATgBEQULAQYBAAAAAAAAABYMAQUPCwABAgMBBAAfJgYAAAAAAAAAAA4BQQYMBAwDCgMKBCMEIQUKDQFFBgwCCgAPAAoAEAEUCwI4AgoAEAEUBgEAAAAAAAAAFgoADwEVCwMGAQAAAAAAAAAWDAMFBQsAAQsBRgYAAAAAAAAAAAIEAQQAGSAGAAAAAAAAAAAOAUEMDAUMAwoDCgUjBB0FCg0BRQwMBAoAEAAKBDgABBgKAA8ACwQ4AQoCOAMLAwYBAAAAAAAAABYMAwUFCwABAgUBAAABCgsAEwABAQEBAQERHQIGAwAAIxYOABABFAwEDQAGAAAAAAAAAAALBBECCwATAQEMAQwCAQwDCwE4BAsCOAULAxEdAgcDAAABDwoAESAGAAAAAAAAAAAKADgGCgA4BwcKESISAQsALhEjOAgCCAEEACkaBgAAAAAAAAAADgFBEwwEDAMKAwoEIwQXBQoNAUUTDAIKAA8CCgILAjgJCwMGAQAAAAAAAAAWDAMFBQsAAQIJAAAABjAOAjgKBAQFCgsAAQsDAQcGJwoDESALAQoDLhEjOAsKAgcABwoRIhIADAQKAxEgCwMuESMSAg0COAw4DQoADwAKABABFAsEOAIKABABFAYBAAAAAAAAABYLAA8BFQIKAQAAAQQLABAAOA4CCwEAAAEFCwAQAAsBOAACDAEAAAEECwAQAjgPAg0BAAABBQsAEAILATgQAg4BAAABBAsAEAEUAg8BAAABEAoAEAMUCgAQBBQKABAFFAoAEAYUCwAQBxQCEAEAAAEECwAQCBQCEQEAAAEECwAQCRQCEgEEAAEcCwIHASEEEA4DQTEGAAAAAAAAAAAkBAoFFgsAAQsEAQcFJwsAAQsEAQcIJwsACwELAwsEERMCEwAAAAYrDgJBMQcJJQQGBQwLAAELAwEHBycKAxEgCwELAy4RIwsCESg4ETgSBwEHChEiEgAMBAoADwAKABABFAsEOAIKABABFAYBAAAAAAAAABYLAA8BFQIUAQQAMpABCgIHBCEEIg4DQTEGAAAAAAAAAAAhBBAKBAoFLhEjIgwGBRIJDAYLBgQVBRsLAAELBQEHBScLAAsBCwQ4EwsFERcFjwEKAgcCIQRFDgNBMQYAAAAAAAAAACQEMgoECgUuESMiDAcFNAkMBwsHBDcFPQsAAQsFAQcFJwsACwELAwsEOBMLBREVBY8BCgIHAyEEaA4DQTEGAAAAAAAAAAAkBFUKBAoFLhEjIgwIBVcJDAgLCARaBWALAAELBQEHBScLAAsBCwMLBDgTCwURFgWPAQsCBwAhBIMBDgNBMQYAAAAAAAAAACEEeAoECgUuESMiDAkFegkMCQsJBH0FiQELAAELBQEHBScLAAELBQEHCCcLAAsBCwQ4EwsFEQkCFQAAAAY+DgJBMQcJJQQGBQwLAAELBAEHBycOAzgKBBAFFgsAAQsEAQcGJwoEESALAQoELhEjCwIRKDgRCgMHAgcKESISAAwFCgQRIAsELhEjEgMNAzgMOBQKAA8ACgAQARQLBTgCCgAQARQGAQAAAAAAAAAWCwAPARUCFgAAAAY1DgJBMQcJJQQGBQwLAAELBAEHBycOAzgKBBAFFgsAAQsEAQcGJwoEESALAQsELhEjCwIRKDgRCwMHAwcKESISAAwFCgAPAAoAEAEUCwU4AgoAEAEUBgEAAAAAAAAAFgsADwEVAhcAAAAGMA4COAoEBAUKCwABCwMBBwYnCgMRIAsBCgMuESM4CwoCBwQHChEiEgAMBAoDESALAy4RIxIDDQI4DDgUCgAPAAoAEAEUCwQ4AgoAEAEUBgEAAAAAAAAAFgsADwEVAhgBBAApHwYAAAAAAAAAAA4BQRMMBAwDCgMKBCMEHAUKDQFFEwwCCgAQAgoCOBAEFwoADwILAjgVAQsDBgEAAAAAAAAAFgwDBQULAAECAQMBAQECAAEAAgADAAQABQIBAwEAAAA="
	DmensProfileB64 = "oRzrCwYAAAALAQAWAhYcAzJxBKMBEgW1AZkBB84C2wIIqQU8BuUFfgrjBhUM+AbnAQ3fCAYAAAABAQIBAwEEAgUCBgIHAggCCQIKAAsIAAEMCAAJDQIABhQEAAcYDAIHAQQBChkHAAAOAAEAAA8CAwAAEAQBAAARBQEAABIGAQAJGgcIAAcbCgsCBwQBHAwBAAcdDQMCBwQGHgQOAAceBA8CBwQKHxARAAggEwEBCAIhFhABAAQiFwEBAAMjEBAABSQYAwAHJRkBAgcEASYEAQAHJwoaAgcEBgkICQoJDBINCA4VDRARCRMJAwcIAAgBBwgCAAIGCAAFAQEBBwgCBAcIAAoCCgIHCAIDBwgACgIHCAIBBggCAQUCBQoCAgcLBAIJAAkBCQABCQEBCAECBgsEAgkACQEJAAEIAwELBAIJAAkBAQoCAQgFAQgAAQkABQUKAgoCBwoCBQECAQYJAAIHCgkACgkAAwYKAgYKAgYKAgMHCwQCCQAJAQkACQEBBwkBB3Byb2ZpbGUFZG1lbnMDYmNzBGhhc2gGdmVjdG9yB2VkMjU1MTkGb2JqZWN0BXRhYmxlCHRyYW5zZmVyCnR4X2NvbnRleHQDdXJsBkdsb2JhbAlEbWVuc01ldGEJVHhDb250ZXh0B2Rlc3Ryb3kKaGFzX2V4c2l0cwRpbml0CHJlZ2lzdGVyEnVwZGF0ZV9jYXB0Y2hhX2tleQJpZANVSUQHY3JlYXRvchJjYXB0Y2hhX3B1YmxpY19rZXkIcHJvZmlsZXMFVGFibGUDVXJsBnNlbmRlcgZyZW1vdmULZGVzdG9yeV9hbGwIY29udGFpbnMDbmV3FW5ld191bnNhZmVfZnJvbV9ieXRlcwxzaGFyZV9vYmplY3QIdG9fYnl0ZXMGYXBwZW5kCHNoYTNfMjU2DmVkMjU1MTlfdmVyaWZ5A2FkZApkbWVuc19tZXRhCmJvcnJvd19tdXQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAIDCAIAAAAAAAAAAwgBAAAAAAAAAAoCISCnvN5o7IBcxBSGW9B60ToLtRlHO/5QGO3FXGClcWFsrQoCQ0JpcGZzOi8vYmFma3JlaWJhdDU0cnd3ZnV4bTM3N3lqNXZsaGpoeWo3Y2J6ZXgydGRoa3R4bW9tNnJkY281NHVwNWEAAgUTCAMVBRYKAhcLBAIFCgIKCAUAAQQAAQoLAA8ACwIuEQU4AAELAREHAgEBAAABBQsAEAALATgBAgIAAAABDQoAEQkKAC4RBQcCCwA4AgcDEQsSADgDAgMBBAAUOgoDLhEFDAhAFQAAAAAAAAAADAYNBg4IOAQ4BQ0GDgE4BjgFCwYRDwwFDgIKABABDgURECAEGQUfCwABCwMBBwAnCgAKCAwELgsEEQEgBC8KAA8ACghAFQAAAAAAAAAAOAcLAxESBTELAwELAA8ACwg4CAwHCwELBxUCBAEEAAESCgAQAhQLAi4RBSEECQUNCwABBwEnCwELAA8BFQIAAwACAAEA"
)

var (
	Address, _ = types.NewAddressFromHex("0xb08ae4d187ca0057baa1666fe43fb9d7f3693a9a")
	M1Mnemonic = os.Getenv("WalletSdkTestM1")
)

func TestnetClient(t *testing.T) *Client {
	c, err := Dial(types.TestnetRpcUrl)
	require.NoError(t, err)
	return c
}

func DevnetClient(t *testing.T) *Client {
	c, err := Dial(types.DevNetRpcUrl)

	coins, err := c.GetCoins(context.TODO(), *Address, nil, nil, 1)
	require.NoError(t, err)
	if len(coins.Data) == 0 {
		_, err = FaucetFundAccount(Address.String(), DevNetFaucetUrl)
		require.NoError(t, err)
	}
	return c
}

func M1Account(t *testing.T) *account.Account {
	a, err := account.NewAccountWithMnemonic(M1Mnemonic)
	require.NoError(t, err)
	return a
}
